generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  passwordHash   String
  isActive       Boolean         @default(true)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  lastLoginAt    DateTime?

  refreshTokens  RefreshToken[]
  auditLogs      AuditLog[]
  passwordResets PasswordReset[]
}

model RefreshToken {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  tokenHash    String
  ipAddress    String?
  userAgent    String?
  createdAt    DateTime @default(now())
  expiresAt    DateTime
  revokedAt    DateTime?
  replacedById String?
  replacedBy   RefreshToken? @relation("TokenReplacement", fields: [replacedById], references: [id])
  replacedTokens RefreshToken[] @relation("TokenReplacement")
}

model AuditLog {
  id        String   @id @default(uuid())
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?
  eventType String
  ipAddress String?
  userAgent String?
  metadata  Json?
  createdAt DateTime @default(now())
}

model PasswordReset {
  id              String   @id @default(uuid())
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String
  resetTokenHash  String
  expiresAt       DateTime
  usedAt          DateTime?
  createdAt       DateTime @default(now())
}